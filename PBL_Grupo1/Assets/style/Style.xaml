<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d">

    <!-- DataGridTextColumn Text Aligment Right -->
    <Style x:Key="rightAlignedColumn" TargetType="{x:Type TextBlock}">
        <Setter Property="TextAlignment" Value="Right" />
    </Style>


    <!-- Material Design Shadow Source -->
    <DropShadowEffect x:Key="z-depth1" BlurRadius="5" ShadowDepth="1" Direction="270" Color="#CCCCCC"/>
    <DropShadowEffect x:Key="z-depth2" BlurRadius="8" ShadowDepth="2.5" Direction="270" Color="#BBBBBB"/>
    <DropShadowEffect x:Key="z-depth3" BlurRadius="14" ShadowDepth="4.5" Direction="270" Color="#BBBBBB"/>
    <DropShadowEffect x:Key="z-depth4" BlurRadius="25" ShadowDepth="8" Direction="270" Color="#BBBBBB"/>
    <DropShadowEffect x:Key="z-depth5" BlurRadius="35" ShadowDepth="13" Direction="270" Color="#BBBBBB"/>

    <!-- Window Control Buttons -->
    <Style x:Key="WindowCloseButton" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Background" Value="#413f44"/>
        <Setter Property="BorderThickness" Value="0"/>

        <Setter Property="Foreground" Value="#333333"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Chrome"
                                 Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="true">

                        <ContentPresenter x:Name="Presenter" Margin="{TemplateBinding Padding}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    RecognizesAccessKey="True"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#ce0000" />
                            <Setter Property="Foreground" Value="#ffffff" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="#a30000" />
                            <Setter Property="Foreground" Value="#ffffff"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="true">
                            <Setter TargetName="Chrome" Property="BorderBrush" Value="#1ba1e2" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="WindowControlButton" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Background" Value="#413f44"/>
        <Setter Property="BorderBrush" Value="#cccccc"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="#333333"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Chrome"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="true">

                        <ContentPresenter x:Name="Presenter" Margin="{TemplateBinding Padding}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    RecognizesAccessKey="True"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>


                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#333333" />
                            <Setter Property="Background" Value="Beige"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#FF595959" />
                            <Setter Property="BorderBrush" Value="#FF595959" />
                            <Setter Property="Foreground" Value="#333333" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="#1ba1e2" />
                            <Setter Property="BorderBrush" Value="#1ba1e2"/>
                            <Setter Property="Foreground" Value="#ffffff"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="true">
                            <Setter TargetName="Chrome" Property="BorderBrush" Value="#1ba1e2" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <!-- Extend Menu Button -->
    <Style x:Key="extendButton" TargetType="{x:Type Image}">
        <Setter Property="Opacity" Value="0.7"/>
        <Setter Property="Width" Value="16"/>
        <Style.Triggers >
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Opacity" Value="1"/>
                <Setter Property="Width" Value="20"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False" >
                <Setter Property="Opacity" Value="0.12" />
            </Trigger>
        </Style.Triggers>

    </Style>

    <!-- Extend Menu Button -->
    <Style x:Key="extendButton2" TargetType="{x:Type Button}">
        <Setter Property="Opacity" Value="0.7"/>
        <Setter Property="Width" Value="16"/>
        <Style.Triggers >
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Opacity" Value="1"/>
                <Setter Property="Width" Value="20"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False" >
                <Setter Property="Opacity" Value="0.2" />
            </Trigger>
        </Style.Triggers>


    </Style>

    <Style x:Key="ToggleButtonStyle1" TargetType="{x:Type ToggleButton}">
        <Style.BasedOn>
            <Style TargetType="{x:Type ToggleButton}">
                <Setter Property="FontFamily" Value="Segoe UI"/>
                <Setter Property="FontSize" Value="14.667"/>
                <Setter Property="Foreground" Value="#FF3F3F3F"/>
                <Setter Property="Padding" Value="10,0,10,2"/>
                <Setter Property="MinHeight" Value="30"/>
                <Setter Property="MinWidth" Value="30"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Grid UseLayoutRounding="True" d:DesignUseLayoutRounding="True">
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal"/>
                                        <VisualState x:Name="MouseOver">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="Bd">
                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                        <DiscreteObjectKeyFrame.Value>
                                                            <SolidColorBrush Color="#7FE7E7E7"/>
                                                        </DiscreteObjectKeyFrame.Value>
                                                    </DiscreteObjectKeyFrame>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="Bd">
                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                        <DiscreteObjectKeyFrame.Value>
                                                            <SolidColorBrush Color="#FF858585"/>
                                                        </DiscreteObjectKeyFrame.Value>
                                                    </DiscreteObjectKeyFrame>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Pressed">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="Bd">
                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                        <DiscreteObjectKeyFrame.Value>
                                                            <SolidColorBrush Color="#FF00AADE"/>
                                                        </DiscreteObjectKeyFrame.Value>
                                                    </DiscreteObjectKeyFrame>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="Bd">
                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                        <DiscreteObjectKeyFrame.Value>
                                                            <SolidColorBrush Color="#FF00AADE"/>
                                                        </DiscreteObjectKeyFrame.Value>
                                                    </DiscreteObjectKeyFrame>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentControl">
                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                        <DiscreteObjectKeyFrame.Value>
                                                            <SolidColorBrush Color="White"/>
                                                        </DiscreteObjectKeyFrame.Value>
                                                    </DiscreteObjectKeyFrame>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Disabled">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="DisabledVisualElement">
                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                        <DiscreteObjectKeyFrame.Value>
                                                            <Visibility>Visible</Visibility>
                                                        </DiscreteObjectKeyFrame.Value>
                                                    </DiscreteObjectKeyFrame>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="CheckStates">
                                        <VisualState x:Name="Checked">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="checked">
                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                        <DiscreteObjectKeyFrame.Value>
                                                            <Visibility>Visible</Visibility>
                                                        </DiscreteObjectKeyFrame.Value>
                                                    </DiscreteObjectKeyFrame>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentControl">
                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                        <DiscreteObjectKeyFrame.Value>
                                                            <SolidColorBrush Color="White"/>
                                                        </DiscreteObjectKeyFrame.Value>
                                                    </DiscreteObjectKeyFrame>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Unchecked"/>
                                        <VisualState x:Name="Indeterminate"/>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="FocusStates">
                                        <VisualState x:Name="Focused">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="FocusedVisualElement">
                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                        <DiscreteObjectKeyFrame.Value>
                                                            <Visibility>Visible</Visibility>
                                                        </DiscreteObjectKeyFrame.Value>
                                                    </DiscreteObjectKeyFrame>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Unfocused"/>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <Rectangle x:Name="Bd" Fill="#33F9F9F9" Stroke="#33B9B9B9" StrokeThickness="1" UseLayoutRounding="True" d:DesignUseLayoutRounding="True"/>
                                <Rectangle x:Name="checked" Fill="#FF00AADE" Stroke="#FF00AADE" StrokeThickness="1" UseLayoutRounding="True" Visibility="Collapsed" d:DesignUseLayoutRounding="True"/>
                                <ContentControl x:Name="ContentControl" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" UseLayoutRounding="True" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" d:DesignUseLayoutRounding="True">
                                    <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" UseLayoutRounding="True" d:DesignUseLayoutRounding="True"/>
                                </ContentControl>
                                <Rectangle x:Name="FocusedVisualElement" Stroke="#FF00AADE" StrokeThickness="2" UseLayoutRounding="True" Visibility="Collapsed" d:DesignUseLayoutRounding="True"/>
                                <Rectangle x:Name="DisabledVisualElement" Fill="#99FFFFFF" UseLayoutRounding="True" Visibility="Collapsed" d:DesignUseLayoutRounding="True"/>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </Style.BasedOn>
    </Style>
 
    <!-- TabControl -->

        <SolidColorBrush x:Key="TabItem.Static.Background" Color="#E0E0E0"/>
        <SolidColorBrush x:Key="TabItem.Static.Border" Color="#E0E0E0"/>
        <SolidColorBrush x:Key="TabItem.MouseOver.Border" Color="#FF0099CC"/>
        <SolidColorBrush x:Key="TabItem.MouseOver.Background" Color="#FF0099CC"/>
        <SolidColorBrush x:Key="TabItem.Disabled.Background" Color="#F0F0F0"/>
        <SolidColorBrush x:Key="TabItem.Disabled.Border" Color="#D9D9D9"/>
        <SolidColorBrush x:Key="TabItem.Selected.Border" Color="#ACACAC"/>
        <SolidColorBrush x:Key="TabItem.Header.Selected.Background" Color="#00779F"/>

        <Style x:Key="WizardFirstTabItemStyle" TargetType="{x:Type TabItem}">
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Foreground" Value="#989898"/>
            <Setter Property="Background" Value="{StaticResource TabItem.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource TabItem.Static.Border}"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="Padding" Value="6,2"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">

                        <Grid x:Name="templateRoot"
                              SnapsToDevicePixels="true">
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>

                            <Border x:Name="topRail"
                                    BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1,0"
                                    Background="{TemplateBinding Background}"
                                    Width="4"
                                    Margin="0,0,0,-5"/>

                            <Grid Grid.Row="1">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>

                                <Border x:Name="leftRail"
                                        BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0,1"
                                        Background="{TemplateBinding Background}"
                                        Height="4"
                                        Margin="0,0,-5,0"/>

                                <Border x:Name="rightRail"
                                        Grid.Column="2"
                                        BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0,1"
                                        Background="{TemplateBinding Background}"
                                        Height="4"
                                        Margin="-5,0,0,0"/>

                                <Ellipse x:Name="mainBorder"
                                         Grid.Column="1"
                                         Stroke="{TemplateBinding BorderBrush}"
                                         Fill="{TemplateBinding Background}"
                                         Width="26" Height="26"
                                         SnapsToDevicePixels="True"/>

                            </Grid>

                            <ContentPresenter x:Name="contentPresenter"
                                              Grid.Row="2"
                                              ContentSource="Header"
                                              Focusable="False"
                                              HorizontalAlignment="Center" VerticalAlignment="Top"
                                              Margin="3,6,3,4"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>

                            <Border x:Name="bottomRail"
                                    Grid.Row="3"
                                    BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1,0"
                                    Background="{TemplateBinding Background}"
                                    Width="4"
                                    Margin="0"/>

                        </Grid>

                        <ControlTemplate.Triggers>
                            <DataTrigger Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top">
                                <Setter Property="Visibility" TargetName="leftRail" Value="Hidden"/>
                                <Setter Property="Visibility" TargetName="topRail" Value="Collapsed"/>
                                <Setter Property="Visibility" TargetName="bottomRail" Value="Collapsed"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom">
                                <Setter Property="Visibility" TargetName="leftRail" Value="Hidden"/>
                                <Setter Property="Visibility" TargetName="topRail" Value="Collapsed"/>
                                <Setter Property="Visibility" TargetName="bottomRail" Value="Collapsed"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right">
                                <Setter Property="Visibility" TargetName="topRail" Value="Hidden"/>
                                <Setter Property="Visibility" TargetName="leftRail" Value="Collapsed"/>
                                <Setter Property="Visibility" TargetName="rightRail" Value="Collapsed"/>
                            </DataTrigger>

                            <DataTrigger Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left">
                                <Setter Property="Visibility" TargetName="topRail" Value="Hidden"/>
                                <Setter Property="Visibility" TargetName="leftRail" Value="Collapsed"/>
                                <Setter Property="Visibility" TargetName="rightRail" Value="Collapsed"/>
                            </DataTrigger>

                            <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True">
                                <Setter Property="Fill" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Background}"/>
                                <Setter Property="Stroke" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Border}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="False">
                                <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                <Setter Property="Fill" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}"/>
                                <Setter Property="Stroke" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Border}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="True">
                                <Setter Property="Panel.ZIndex" Value="1"/>
                                <Setter Property="Foreground" Value="{StaticResource TabItem.Header.Selected.Background}"/>
                                <Setter Property="Fill" TargetName="mainBorder" Value="{StaticResource TabItem.Header.Selected.Background}"/>
                                <Setter Property="Stroke" TargetName="mainBorder" Value="{StaticResource TabItem.Header.Selected.Background}"/>
                            </DataTrigger>
                        </ControlTemplate.Triggers>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="WizardTabItemStyle" TargetType="{x:Type TabItem}">
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Foreground" Value="#989898"/>
            <Setter Property="Background" Value="{StaticResource TabItem.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource TabItem.Static.Border}"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="Padding" Value="6,2"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">

                        <Grid x:Name="templateRoot"
                              SnapsToDevicePixels="true">
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>

                            <Border x:Name="topRail"
                                    BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1,0"
                                    Background="{TemplateBinding Background}"
                                    Width="4"
                                    Margin="0,0,0,-5"/>

                            <Grid Grid.Row="1">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>

                                <Border x:Name="leftRail"
                                        BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0,1"
                                        Background="{TemplateBinding Background}"
                                        Height="4"
                                        Margin="0,0,-5,0"/>

                                <Border x:Name="rightRail"
                                        Grid.Column="2"
                                        BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0,1"
                                        Background="{TemplateBinding Background}"
                                        Height="4"
                                        Margin="-5,0,0,0"/>

                                <Ellipse x:Name="mainBorder"
                                         Grid.Column="1"
                                         Stroke="{TemplateBinding BorderBrush}"
                                         Fill="{TemplateBinding Background}"
                                         Width="26" Height="26"
                                         SnapsToDevicePixels="True"/>

                            </Grid>

                            <ContentPresenter x:Name="contentPresenter"
                                              Grid.Row="2"
                                              ContentSource="Header"
                                              Focusable="False"
                                              HorizontalAlignment="Center" VerticalAlignment="Top"
                                              Margin="3,6,3,4"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>

                            <Border x:Name="bottomRail"
                                    Grid.Row="3"
                                    BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1,0"
                                    Background="{TemplateBinding Background}"
                                    Width="4"
                                    Margin="0"/>

                        </Grid>

                        <ControlTemplate.Triggers>
                            <!--<DataTrigger Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top">
                                <Setter Property="Visibility" TargetName="topRail" Value="Collapsed"/>
                                <Setter Property="Visibility" TargetName="bottomRail" Value="Collapsed"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom">
                                <Setter Property="Visibility" TargetName="topRail" Value="Collapsed"/>
                                <Setter Property="Visibility" TargetName="bottomRail" Value="Collapsed"/>
                            </DataTrigger>-->
                            <DataTrigger Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right">
                                <Setter Property="Visibility" TargetName="leftRail" Value="Collapsed"/>
                                <Setter Property="Visibility" TargetName="rightRail" Value="Collapsed"/>
                            </DataTrigger>

                            <DataTrigger Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left">
                                <Setter Property="Visibility" TargetName="leftRail" Value="Collapsed"/>
                                <Setter Property="Visibility" TargetName="rightRail" Value="Collapsed"/>
                            </DataTrigger>

                            <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True">
                                <Setter Property="Fill" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Background}"/>
                                <Setter Property="Stroke" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Border}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="False">
                                <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                <Setter Property="Fill" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}"/>
                                <Setter Property="Stroke" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Border}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="True">
                                <Setter Property="Panel.ZIndex" Value="1"/>
                                <Setter Property="Foreground" Value="{StaticResource TabItem.Header.Selected.Background}"/>
                                <Setter Property="Fill" TargetName="mainBorder" Value="{StaticResource TabItem.Header.Selected.Background}"/>
                                <Setter Property="Stroke" TargetName="mainBorder" Value="{StaticResource TabItem.Header.Selected.Background}"/>
                            </DataTrigger>
                        </ControlTemplate.Triggers>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="WizardLastTabItemStyle" TargetType="{x:Type TabItem}">
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Foreground" Value="#989898"/>
            <Setter Property="Background" Value="{StaticResource TabItem.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource TabItem.Static.Border}"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="Padding" Value="6,2"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">

                        <Grid x:Name="templateRoot"
                              SnapsToDevicePixels="true">
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>

                            <Border x:Name="topRail"
                                    BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1,0"
                                    Background="{TemplateBinding Background}"
                                    Width="4"
                                    Margin="0,0,0,-5"/>

                            <Grid Grid.Row="1">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>

                                <Border x:Name="leftRail"
                                        BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0,1"
                                        Background="{TemplateBinding Background}"
                                        Height="4"
                                        Margin="0,0,-5,0"/>

                                <Border x:Name="rightRail"
                                        Grid.Column="2"
                                        BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0,1"
                                        Background="{TemplateBinding Background}"
                                        Height="4"
                                        Margin="-5,0,0,0"/>

                                <Ellipse x:Name="mainBorder"
                                         Grid.Column="1"
                                         Stroke="{TemplateBinding BorderBrush}"
                                         Fill="{TemplateBinding Background}"
                                         Width="26" Height="26"
                                         SnapsToDevicePixels="True"/>

                            </Grid>

                            <ContentPresenter x:Name="contentPresenter"
                                              Grid.Row="2"
                                              ContentSource="Header"
                                              Focusable="False"
                                              HorizontalAlignment="Center" VerticalAlignment="Top"
                                              Margin="3,6,3,4"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>

                            <Border x:Name="bottomRail"
                                    Grid.Row="3"
                                    BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1,0"
                                    Background="{TemplateBinding Background}"
                                    Width="4"
                                    Margin="0"/>

                        </Grid>

                        <ControlTemplate.Triggers>
                            <DataTrigger Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top">
                                <Setter Property="Visibility" TargetName="rightRail" Value="Hidden"/>
                                <Setter Property="Visibility" TargetName="topRail" Value="Collapsed"/>
                                <Setter Property="Visibility" TargetName="bottomRail" Value="Collapsed"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom">
                                <Setter Property="Visibility" TargetName="rightRail" Value="Hidden"/>
                                <Setter Property="Visibility" TargetName="topRail" Value="Collapsed"/>
                                <Setter Property="Visibility" TargetName="bottomRail" Value="Collapsed"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right">
                                <Setter Property="Visibility" TargetName="leftRail" Value="Collapsed"/>
                                <Setter Property="Visibility" TargetName="rightRail" Value="Collapsed"/>
                                <Setter Property="Visibility" TargetName="bottomRail" Value="Hidden"/>
                            </DataTrigger>

                            <DataTrigger Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left">
                                <Setter Property="Visibility" TargetName="leftRail" Value="Collapsed"/>
                                <Setter Property="Visibility" TargetName="rightRail" Value="Collapsed"/>
                                <Setter Property="Visibility" TargetName="bottomRail" Value="Hidden"/>
                            </DataTrigger>

                            <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True">
                                <Setter Property="Fill" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Background}"/>
                                <Setter Property="Stroke" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Border}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="False">
                                <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                <Setter Property="Fill" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}"/>
                                <Setter Property="Stroke" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Border}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="True">
                                <Setter Property="Panel.ZIndex" Value="1"/>
                                <Setter Property="Foreground" Value="{StaticResource TabItem.Header.Selected.Background}"/>
                                <Setter Property="Fill" TargetName="mainBorder" Value="{StaticResource TabItem.Header.Selected.Background}"/>
                                <Setter Property="Stroke" TargetName="mainBorder" Value="{StaticResource TabItem.Header.Selected.Background}"/>
                            </DataTrigger>
                        </ControlTemplate.Triggers>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="WizardTabControlStyle" TargetType="{x:Type TabControl}">
            <Setter Property="Padding" Value="2"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="{StaticResource TabItem.Selected.Border}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabControl}">

                        <Grid x:Name="templateRoot"
                              ClipToBounds="true"
                              SnapsToDevicePixels="true"
                              KeyboardNavigation.TabNavigation="Local">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="ColumnDefinition0"/>
                                <ColumnDefinition x:Name="ColumnDefinition1" Width="0"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition x:Name="RowDefinition0" Height="Auto"/>
                                <RowDefinition x:Name="RowDefinition1" Height="*"/>
                            </Grid.RowDefinitions>

                            <UniformGrid x:Name="headerPanel"
                                         Background="Transparent"
                                         IsItemsHost="true"
                                         Margin="2,2,2,0"
                                         KeyboardNavigation.TabIndex="1"
                                         Panel.ZIndex="1"/>

                            <Border x:Name="contentPanel"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Background="{TemplateBinding Background}"
                                    Grid.Column="0" Grid.Row="1"
                                    KeyboardNavigation.DirectionalNavigation="Contained" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local">

                                <ContentPresenter x:Name="PART_SelectedContentHost"
                                                  ContentSource="SelectedContent"
                                                  Margin="{TemplateBinding Padding}"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>

                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="TabStripPlacement" Value="Top">
                                <Setter Property="Rows" TargetName="headerPanel" Value="1"/>
                            </Trigger>
                            <Trigger Property="TabStripPlacement" Value="Bottom">
                                <Setter Property="Rows" TargetName="headerPanel" Value="1"/>
                                <Setter Property="Grid.Row" TargetName="headerPanel" Value="1"/>
                                <Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
                                <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                                <Setter Property="Height" TargetName="RowDefinition1" Value="Auto"/>
                                <Setter Property="Margin" TargetName="headerPanel" Value="2,0,2,2"/>
                            </Trigger>
                            <Trigger Property="TabStripPlacement" Value="Left">
                                <Setter Property="Columns" TargetName="headerPanel" Value="1"/>
                                <Setter Property="Grid.Row" TargetName="headerPanel" Value="0"/>
                                <Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
                                <Setter Property="Grid.Column" TargetName="headerPanel" Value="0"/>
                                <Setter Property="Grid.Column" TargetName="contentPanel" Value="1"/>
                                <Setter Property="Width" TargetName="ColumnDefinition0" Value="Auto"/>
                                <Setter Property="Width" TargetName="ColumnDefinition1" Value="*"/>
                                <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                                <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
                                <Setter Property="Margin" TargetName="headerPanel" Value="2,2,0,2"/>
                            </Trigger>
                            <Trigger Property="TabStripPlacement" Value="Right">
                                <Setter Property="Columns" TargetName="headerPanel" Value="1"/>
                                <Setter Property="Grid.Row" TargetName="headerPanel" Value="0"/>
                                <Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
                                <Setter Property="Grid.Column" TargetName="headerPanel" Value="1"/>
                                <Setter Property="Grid.Column" TargetName="contentPanel" Value="0"/>
                                <Setter Property="Width" TargetName="ColumnDefinition0" Value="*"/>
                                <Setter Property="Width" TargetName="ColumnDefinition1" Value="Auto"/>
                                <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                                <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
                                <Setter Property="Margin" TargetName="headerPanel" Value="0,2,2,2"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


</ResourceDictionary>